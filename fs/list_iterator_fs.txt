STATE before_parse
    CREATE self_referential_struct_name ""
    CREATE self_referential_ptr ""
    CREATE node_keys []
    CREATE iter_struct_name ""
    CREATE iter_ptr_name ""
    CREATE struct_count 0
    CREATE non_self_ref_structs {}
    CREATE func_params {}
    CREATE iter_get_found False
    CREATE iter_has_next_found False    
END_STATE

STATE structures_and_unions
    USE_GLOBAL self_referential_struct_name
    USE_GLOBAL self_referential_ptr
    USE_GLOBAL struct_count
    CREATE is_self_ref False
    IF '{' IN EXP
        COMMENT Checks if line matched is a structure declaration. Prodn matched for all uses of keyword struct.
        IF 'struct' IN EXP
            COMMENT Checking only struct declarations, not unions.
            
            FOR memb IN STRUCT_MEMBERS
                SET t "type"
                SET d "declarators"
                COMMENT 'INDEX memb "type"' is invalid as memb_"type" is not a valid identifier
                INDEX memb t
                INDEX memb d
                IF NAME IN memb_t
                    FOR i IN range(len(memb_d))
                        INDEX memb_d i
                        IF memb_d_i.isidentifier() EQUALTO True
                            SET self_referential_ptr memb_d_i
                            SET self_referential_struct_name NAME
                            SET is_self_ref True
                            BREAK
                        END_IF
                    END_FOR
                END_IF
            END_FOR
            
            IF is_self_ref EQUALTO False
                DICT_APPEND non_self_ref_structs NAME copy.deepcopy(STRUCT_MEMBERS)
            ELSE
                FOR memb IN STRUCT_MEMBERS
                    IF self_referential_struct_name NOTIN memb['type']
                        FOR i IN range(len(memb['declarators']))
                            SET memb_d_i memb['declarators'][i]
                            IF memb_d_i.isidentifier() EQUALTO True
                                APPEND node_keys memb_d_i
                                BREAK
                            END_IF
                        END_FOR
                    END_IF
                END_FOR
            END_IF
            SET struct_count struct_count+1
            COMMENT If struct_count < 3, iterator not used
        END_IF
    END_IF
END_STATE


STATE function_header
    USE_GLOBAL func_params
    SET func_params FUNC_PARAMS
END_STATE

STATE variable_assignments
    USE_GLOBAL func_params
    USE_GLOBAL iter_struct_name
    USE_GLOBAL iter_ptr_name
    IF '->' IN LHS
        COMMENT Above check is required as otherwise prev=prev->link_ is matched too
        IF RHS EQUALTO LHS+['->',self_referential_ptr]
            FOR param IN func_params
                IF LHS[0] IN param
                    INDEX func_params param
                    SET iter_struct_name func_params_param[1]
                    COMMENT Type must 'struct X' as it is on LHS of '->'
                    FOR term IN non_self_ref_structs[iter_struct_name][0]['declarators']
                        COMMENT [0] as iterator has only one member
                        IF term.isidentifier() EQUALTO True
                            SET iter_ptr_name term
                        END_IF
                    END_FOR 
                END_IF
            END_FOR
        END_IF
    END_IF
END_STATE

STATE jump_statement
    USE_GLOBAL iter_get_found
    USE_GLOBAL iter_has_next_found
    SET key_found False
    IF 'return' IN EXP
        IF ['->', iter_ptr_name] IN EXP
            FOR key IN node_keys
                IF key IN EXP
                    SET key_found True
                    BREAK
                END_IF
            END_FOR
            IF key_found EQUALTO True
                SET iter_get_found True
            ELSE
                IF 'NULL' IN EXP
                    SET iter_has_next_found True
                END_IF
            END_IF
        END_IF
    END_IF
END_STATE

STATE after_parse  
    IF struct_count LESS_THAN 3
        PRINT 1
        VIOLATION Expected at least 3 structures: list node, list and iterator structures
    END_IF

    IF iter_struct_name EQUALTO ""
        PRINT 1
        VIOLATION iterator has not been initialized to list head.
    END_IF
    
    IF iter_get_found EQUALTO False
        PRINT 1
        VIOLATION iterator get() function not found.
    END_IF
    
    IF iter_has_next_found EQUALTO False
        PRINT 1
        VIOLATION iterator has_next() function not found.
    END_IF
END_STATE
    
        
        

